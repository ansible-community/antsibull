---
- name: Set expected path to deps file and release archive
  ansible.builtin.set_fact:
    _deps_file: "ansible-{{ antsibull_ansible_version }}.deps"
    _release_archive: "{{ antsibull_sdist_dir }}/ansible-{{ antsibull_ansible_version }}.tar.gz"

# Documentation for the following commands:
# https://github.com/ansible-community/antsibull/blob/main/docs/build-ansible.rst

- name: Update version ranges in the build file for alpha and beta releases
  command: >-
    {{ antsibull_build_command }} new-ansible {{ antsibull_ansible_version }}
      --data-dir {{ antsibull_data_dir }}
  when: antsibull_ansible_version is regex("^\d+.\d+.\d+(a\d+|b1)$")

- name: Set up feature freeze for b2 through rc1
  set_fact:
    _feature_freeze: "--feature-frozen"
  when: antsibull_ansible_version is regex("^\d+.\d+.\d+(b2|b3|rc1)$")

- name: Prepare a release with new dependencies
  command: >-
    {{ antsibull_build_command }} prepare {{ antsibull_ansible_version }}
      --data-dir {{ antsibull_data_dir }}
      {{ _feature_freeze | default('') }}
  # Minimal failure tolerance to galaxy collection download errors
  retries: 3
  delay: 5
  register: _build
  until: _build.rc == 0
  args:
    chdir: "{{ playbook_dir | dirname }}"
    creates: "{{ antsibull_data_dir }}/{{ _deps_file }}"

- name: Remove existing release archive if it exists
  file:
    path: "{{ _release_archive }}"
    state: absent
  when: antsibull_force_rebuild | bool

# If the release archive is already there it won't be re-built if we run again
- name: Build a release with existing deps
  command: >-
    {{ antsibull_build_command }} rebuild-single {{ antsibull_ansible_version }}
      --data-dir {{ antsibull_data_dir }}
      --sdist-dir {{ antsibull_sdist_dir }}
      --build-file {{ antsibull_build_file }}
      --deps-file {{ _deps_file }}
      --debian
  # Minimal failure tolerance to galaxy collection download errors
  retries: 3
  delay: 5
  register: _rebuild
  until: _rebuild.rc == 0
  args:
    chdir: "{{ playbook_dir | dirname }}"
    creates: "{{ _release_archive }}"

# We can use this to test that the release on PyPi matches later (for example)
- name: Record the sha256sum for the built tarball
  command: sha256sum {{ _release_archive }}
  changed_when: false
  register: _tarball_checksum

- name: Compute a galaxy-requirements.yml file for the release
  command: >-
    poetry run {{ role_path }}/files/deps-to-galaxy.py --depsfile {{ antsibull_data_dir }}/{{ _deps_file }}
  register: _galaxy_reqs

- name: Template a galaxy-requirements.yaml file
  copy:
    dest: "{{ antsibull_data_dir }}/galaxy-requirements.yaml"
    content: |
      # Generated by antsibull/roles/build-release/files/deps-to-galaxy.py from {{ _deps_file }}
      {{ _galaxy_reqs.stdout }}

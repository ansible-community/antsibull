---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# These tests are meant to be run by another Ansible (i.e, the one built with build-single-release.yaml)
- name: Run nested Ansible tests
  hosts: localhost
  gather_facts: no
  vars:
    # These can be supplied as extra-vars but are expected to come from roles/build-release/tasks/tests.yaml
    antsibull_sdist_dir: "{{ playbook_dir | dirname }}/build"
    antsibull_ansible_venv: "{{ antsibull_sdist_dir }}/venv"
    _python_version: "python3.9"
  tasks:
    - name: Parse installed ansible_builtin_runtime
      parse_ansible_runtime:
        runtime_file: "{{ antsibull_ansible_venv }}/lib/{{ _python_version }}/site-packages/ansible/config/ansible_builtin_runtime.yml"
      register: _parsed_runtime

    - name: Validate collection availability
      ansible.builtin.assert:
        that:
          - query("community.general.collection_version", item) != [none]
        success_msg: "{{ item }}: available"
        fail_msg: "{{ item }}: not available"
      loop: "{{ _parsed_runtime.collections }}"
      ignore_errors: true
      register: _collection_availability

    - name: Validate module availability
      ansible.builtin.assert:
        that:
          - item is community.general.a_module
        success_msg: "{{ item }}: found"
        fail_msg: "{{ item }}: not found"
      loop: "{{ _parsed_runtime.modules }}"
      ignore_errors: true
      register: _module_availability

    - name: Retrieve unavailable collections and modules
      ansible.builtin.set_fact:
        _unavailable_collections: "{{ _collection_availability.results | selectattr('failed', 'eq', true) | selectattr('item', 'ne', 'testns.testcoll') }}"
        _unavailable_modules: "{{ _module_availability.results | selectattr('failed', 'eq', true) | selectattr('item', 'ne', 'testns.testcoll.ping') }}"

    - name: Print unavailable collections
      ansible.builtin.debug:
        msg: "The following collections are not available: {{ _unavailable_collections | map(attribute='item') | join(', ') }}"

    - name: Print unavailable modules
      ansible.builtin.debug:
        msg: "The following modules are not available: {{ _unavailable_modules | map(attribute='item') | join(', ') }}"

{
    "add_host": {
        "doc": {
            "author": [
                "Ansible Core Team",
                "Seth Vidal (@skvidal)"
            ],
            "attributes": {
                "action": {
                    "description": "Indicates this has a corresponding action plugin so some parts of the options can be executed on the controller",
                    "support": "full"
                },
                "action_group": {
                    "description": ["Action is part of action_group(s), for convenient setting of module_defaults."],
                    "membership": [],
                    "support": "none"
                },
                "api": {
                    "description": "Instead of executing code on a target, this action interacts with an API on behalf of the target.",
                    "support": "none"
                },
                "async": {
                    "description": "Supports being used with the ``async`` keyword",
                    "details": [
                        "One",
                        "Two"
                    ],
                    "support": "full"
                },
                "become": {
                    "description": "Is usable alongside become keywords",
                    "details": "Test",
                    "support": "full"
                },
                "bypass_host_loop": {
                    "description": [
                        "Forces a 'global' task that does not execute per host, this bypasses per host templating and serial, throttle and other loop considerations.",
                        "Also, this action cannot be used in non lockstep strategies"
                    ],
                    "support": "none"
                },
                "check_mode": {
                    "description": "Can run in check_mode and return changed status prediction withought modifying target",
                    "support": "full"
                },
                "conditional": {
                    "description": "Will respect the `when` keyword  per item loop or task (when no loop is present)",
                    "support": "full"
                },
                "connection": {
                    "description": "Uses the target's configured connection information to execute code on it",
                    "support": "full"
                },
                "delegation": {
                    "description": "Can be used in conjunction with delegate_to and related keywords",
                    "support": "full"
                },
                "diff_mode": {
                    "description": "Will return details on what has changed (or possibly needs changing in check_mode), when in diff mode",
                    "support": "full"
                },
                "facts": {
                    "description": "Action returns an ``ansible_facts`` dictionary that will update existing host facts",
                    "support": "none"
                },
                "forced_action_plugin": {
                    "action_plugin": "none",
                    "description": "This action uses a specific action plugin instead of 'normal' or matching by name",
                    "support": "none"
                },
                "forced_local": {
                    "description": "The connection itself is passed to the action while the code is still executed on the controller",
                    "support": "none"
                },
                "info": {
                    "description": "This returns general info (not facts) that you might want to register into a variable for later use",
                    "support": "none"
                },
                "loops": {
                    "description": "both ``loop`` and ``with_`` looping keywords will be honored",
                    "support": "full"
                },
                "posix": {
                    "description": "Can be run against most POSIX (and GNU/Linux) OS targets",
                    "support": "full"
                },
                "proprietary": {
                    "description": "Designed to only be run against specific proprietary OS(s), normally a network appliance or similar",
                    "platforms": [],
                    "support": "none"
                },
                "safe_file_operations": {
                    "description": "Uses Ansbile's strict file operation functions to ensure proper permissions and avoid data corruption",
                    "support": "none"
                },
                "tags": {
                    "description": "Tags will be evaluated to determine if this task considered for execution",
                    "support": "full"
                },
                "tty": {
                    "description": "requires direct access to a TTY",
                    "support": "none"
                },
                "turbo": {
                    "description": "Uses an Ansible supplied caching mechanism (Turbo!) on the remote for authentication and 3rd party libraries to speed up recurrent execution",
                    "support": "none"
                },
                "until": {
                    "description": "Usable with until/retry loops",
                    "support": "full"
                },
                "vault": {
                    "description": "Can automatically decrypt Ansible vaulted files",
                    "support": "full",
                    "version_added": "2.2",
                    "version_added_collection": "ansible.builtin"
                },
                "windows": {
                    "description": "Can be run against Windows OS targets",
                    "support": "none"
                }
            },
            "description": [
                "Use variables to create new hosts and groups in inventory for use in later plays of the same playbook.",
                "Takes variables so you can define the new hosts more fully.",
                "This module is also supported for Windows targets."
            ],
            "filename": "/var/tmp/tmpwn9e2j6c/ansible-base-venv/lib64/python3.8/site-packages/ansible/modules/inventory/add_host.py",
            "has_action": true,
            "module": "add_host",
            "notes": [
                "This module bypasses the play host loop and only runs once for all the hosts in the play, if you need it to iterate use a with-loop construct.",
                "The alias C(host) of the parameter C(name) is only available on Ansible 2.4 and newer.",
                "Since Ansible 2.4, the C(inventory_dir) variable is now set to C(None) instead of the 'global inventory source', because you can now have multiple sources.  An example was added that shows how to partially restore the previous behaviour.",
                "Windows targets are supported by this module."
            ],
            "options": {
                "groups": {
                    "aliases": [
                        "group",
                        "groupname"
                    ],
                    "description": [
                        "The groups to add the hostname to."
                    ],
                    "type": "list"
                },
                "name": {
                    "aliases": [
                        "host",
                        "hostname"
                    ],
                    "description": [
                        "The hostname/ip of the host to add to the inventory, can include a colon and a port number."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "group_by"
                }
            ],
            "short_description": "Add a host (and alternatively a group) to the ansible-playbook in-memory inventory",
            "version_added": "0.9",
            "version_added_collection": "foo.bar"
        },
        "examples": "\n- name: Add host to group 'just_created' with variable foo=42\n  add_host:\n    name: '{{ ip_from_ec2 }}'\n    groups: just_created\n    foo: 42\n\n- name: Add host to multiple groups\n  add_host:\n    hostname: '{{ new_ip }}'\n    groups:\n    - group1\n    - group2\n\n- name: Add a host with a non-standard port local to your machines\n  add_host:\n    name: '{{ new_ip }}:{{ new_port }}'\n\n- name: Add a host alias that we reach through a tunnel (Ansible 1.9 and older)\n  add_host:\n    hostname: '{{ new_ip }}'\n    ansible_ssh_host: '{{ inventory_hostname }}'\n    ansible_ssh_port: '{{ new_port }}'\n\n- name: Add a host alias that we reach through a tunnel (Ansible 2.0 and newer)\n  add_host:\n    hostname: '{{ new_ip }}'\n    ansible_host: '{{ inventory_hostname }}'\n    ansible_port: '{{ new_port }}'\n\n- name: Ensure inventory vars are set to the same value as the inventory_hostname has (close to pre Ansible 2.4 behaviour)\n  add_host:\n    hostname: charlie\n    inventory_dir: '{{ inventory_dir }}'\n",
        "metadata": {
            "status": [
                "stableinterface"
            ],
            "supported_by": "core"
        },
        "return": null
    }
}
